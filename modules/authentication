import streamlit as st
from streamlit_option_menu import option_menu
import streamlit_authenticator as stauth


def authenticate_user(username, password):
    for db_connection in [connect_to_mysql_db1(), connect_to_mysql_db2()]:
        if db_connection:
            try:
                cursor = db_connection.cursor()
                cursor.execute("SELECT password, usertype FROM users WHERE username = %s", (username,))
                result = cursor.fetchone()
                if result:
                    stored_password, usertype = result
                    stored_password = stored_password.encode('utf-8')
                    if bcrypt.checkpw(password.encode('utf-8'), stored_password):
                        return True, usertype  # Authentication successful, return True and usertype
                    else:
                        print(f"Password mismatch for user {username}.")
                else:
                    print(f"No password found for user {username}.")
            except mysql.connector.Error as e:
                print(f"Database error during authentication for user {username}: {e}")
            finally:
                cursor.close()
                db_connection.close()
    print(f"User {username} not found in any database.")
    return False, None  # Authentication failed, return False and None for usertype



def login_user():
    with st.form(key='login_form_unique'):
        username = st.text_input("Username")
        password = st.text_input("Password", type="password")
        submit_button = st.form_submit_button("Login")
        if submit_button:
            authenticated, usertype = authenticate_user(username, password)
            if authenticated:
                user_info = fetch_user_info(username)
                if user_info:
                    st.session_state['authentication_status'] = True
                    st.session_state['user_info'] = user_info
                    st.success("Login successful!")
                    st.experimental_rerun()
                else:
                    st.error("Failed to retrieve user details after authentication.")
            else:
                st.error("Invalid username or password.")


# Initialize session state variables if they don't exist.
if 'authentication_status' not in st.session_state:
    st.session_state['authentication_status'] = None
if 'user_info' not in st.session_state:
    st.session_state['user_info'] = {'user_id': None, 'username': None, 'email': None, 'usertype': None}
if 'page' not in st.session_state:
    st.session_state['page'] = 'Login'